HOMEWORKS



1)
Segmentation fault (core dumped)




2)
----gcc -o null null.c -Wall -g
----gdb null
GNU gdb (Ubuntu 8.1-0ubuntu3) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from null...done.
(gdb) run
Starting program: /media/sf_VM/BSYS/14_AdressAPI/null 

Program received signal SIGSEGV, Segmentation fault.
0x00005555555546ac in main () at null.c:9
9	    printf("%d\n", *pointer);








3)
-------valgrind --leak-check=yes ./null
==2859== Memcheck, a memory error detector
==2859== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2859== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2859== Command: ./null
==2859== 
==2859== Invalid read of size 4
==2859==    at 0x1086AC: main (null.c:9)
==2859==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2859== 
==2859== 
==2859== Process terminating with default action of signal 11 (SIGSEGV)
==2859==  Access not within mapped region at address 0x0
==2859==    at 0x1086AC: main (null.c:9)
==2859==  If you believe this happened as a result of a stack
==2859==  overflow in your program's main thread (unlikely but
==2859==  possible), you can try to increase the size of the
==2859==  main thread stack using the --main-stacksize= flag.
==2859==  The main thread stack size used in this run was 8388608.
==2859== 
==2859== HEAP SUMMARY:
==2859==     in use at exit: 4 bytes in 1 blocks
==2859==   total heap usage: 1 allocs, 0 frees, 4 bytes allocated
==2859== 
==2859== 4 bytes in 1 blocks are definitely lost in loss record 1 of 1
==2859==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2859==    by 0x10869B: main (null.c:7)
==2859== 
==2859== LEAK SUMMARY:
==2859==    definitely lost: 4 bytes in 1 blocks
==2859==    indirectly lost: 0 bytes in 0 blocks
==2859==      possibly lost: 0 bytes in 0 blocks
==2859==    still reachable: 0 bytes in 0 blocks
==2859==         suppressed: 0 bytes in 0 blocks
==2859== 
==2859== For counts of detected and suppressed errors, rerun with: -v
==2859== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Segmentation fault (core dumped)









4)
valgrind --leak-check=yes ./exec4
==3032== Memcheck, a memory error detector
==3032== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3032== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3032== Command: ./exec4
==3032== 
==3032== 
==3032== HEAP SUMMARY:
==3032==     in use at exit: 4 bytes in 1 blocks
==3032==   total heap usage: 1 allocs, 0 frees, 4 bytes allocated
==3032== 
==3032== 4 bytes in 1 blocks are definitely lost in loss record 1 of 1
==3032==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3032==    by 0x10865B: main (exec4.c:5)
==3032== 
==3032== LEAK SUMMARY:
==3032==    definitely lost: 4 bytes in 1 blocks
==3032==    indirectly lost: 0 bytes in 0 blocks
==3032==      possibly lost: 0 bytes in 0 blocks
==3032==    still reachable: 0 bytes in 0 blocks
==3032==         suppressed: 0 bytes in 0 blocks
==3032== 
==3032== For counts of detected and suppressed errors, rerun with: -v
==3032== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)



gdb exec4
GNU gdb (Ubuntu 8.1-0ubuntu3) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from exec4...done.
(gdb) run
Starting program: /media/sf_VM/BSYS/14_AdressAPI/exec4 
[Inferior 1 (process 3052) exited normally]








5)
gdb exec5
GNU gdb (Ubuntu 8.1-0ubuntu3) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from exec5...done.
(gdb) run
Starting program: /media/sf_VM/BSYS/14_AdressAPI/exec5 
0
[Inferior 1 (process 3123) exited normally]





valgrind --leak-check=yes ./exec5
==3129== Memcheck, a memory error detector
==3129== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3129== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3129== Command: ./exec5
==3129== 
==3129== Invalid write of size 4
==3129==    at 0x10870B: main (exec5.c:8)
==3129==  Address 0x522d1d0 is 0 bytes after a block of size 400 alloc'd
==3129==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3129==    by 0x1086EB: main (exec5.c:6)
==3129== 
==3129== Conditional jump or move depends on uninitialised value(s)
==3129==    at 0x4E988DA: vfprintf (vfprintf.c:1642)
==3129==    by 0x4EA0F25: printf (printf.c:33)
==3129==    by 0x108729: main (exec5.c:9)
==3129== 
==3129== Use of uninitialised value of size 8
==3129==    at 0x4E9486B: _itoa_word (_itoa.c:179)
==3129==    by 0x4E97F0D: vfprintf (vfprintf.c:1642)
==3129==    by 0x4EA0F25: printf (printf.c:33)
==3129==    by 0x108729: main (exec5.c:9)
==3129== 
==3129== Conditional jump or move depends on uninitialised value(s)
==3129==    at 0x4E94875: _itoa_word (_itoa.c:179)
==3129==    by 0x4E97F0D: vfprintf (vfprintf.c:1642)
==3129==    by 0x4EA0F25: printf (printf.c:33)
==3129==    by 0x108729: main (exec5.c:9)
==3129== 
==3129== Conditional jump or move depends on uninitialised value(s)
==3129==    at 0x4E98014: vfprintf (vfprintf.c:1642)
==3129==    by 0x4EA0F25: printf (printf.c:33)
==3129==    by 0x108729: main (exec5.c:9)
==3129== 
==3129== Conditional jump or move depends on uninitialised value(s)
==3129==    at 0x4E98B4C: vfprintf (vfprintf.c:1642)
==3129==    by 0x4EA0F25: printf (printf.c:33)
==3129==    by 0x108729: main (exec5.c:9)
==3129== 
0
==3129== 
==3129== HEAP SUMMARY:
==3129==     in use at exit: 0 bytes in 0 blocks
==3129==   total heap usage: 2 allocs, 2 frees, 1,424 bytes allocated
==3129== 
==3129== All heap blocks were freed -- no leaks are possible
==3129== 
==3129== For counts of detected and suppressed errors, rerun with: -v
==3129== Use --track-origins=yes to see where uninitialised values come from
==3129== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 0 from 0)


valgrind --track-origins=yes ./exec5
==3151== Memcheck, a memory error detector
==3151== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3151== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3151== Command: ./exec5
==3151== 
==3151== Invalid write of size 4
==3151==    at 0x10870B: main (exec5.c:8)
==3151==  Address 0x522d1d0 is 0 bytes after a block of size 400 alloc'd
==3151==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3151==    by 0x1086EB: main (exec5.c:6)
==3151== 
==3151== Conditional jump or move depends on uninitialised value(s)
==3151==    at 0x4E988DA: vfprintf (vfprintf.c:1642)
==3151==    by 0x4EA0F25: printf (printf.c:33)
==3151==    by 0x108729: main (exec5.c:9)
==3151==  Uninitialised value was created by a heap allocation
==3151==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3151==    by 0x1086EB: main (exec5.c:6)
==3151== 
==3151== Use of uninitialised value of size 8
==3151==    at 0x4E9486B: _itoa_word (_itoa.c:179)
==3151==    by 0x4E97F0D: vfprintf (vfprintf.c:1642)
==3151==    by 0x4EA0F25: printf (printf.c:33)
==3151==    by 0x108729: main (exec5.c:9)
==3151==  Uninitialised value was created by a heap allocation
==3151==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3151==    by 0x1086EB: main (exec5.c:6)
==3151== 
==3151== Conditional jump or move depends on uninitialised value(s)
==3151==    at 0x4E94875: _itoa_word (_itoa.c:179)
==3151==    by 0x4E97F0D: vfprintf (vfprintf.c:1642)
==3151==    by 0x4EA0F25: printf (printf.c:33)
==3151==    by 0x108729: main (exec5.c:9)
==3151==  Uninitialised value was created by a heap allocation
==3151==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3151==    by 0x1086EB: main (exec5.c:6)
==3151== 
==3151== Conditional jump or move depends on uninitialised value(s)
==3151==    at 0x4E98014: vfprintf (vfprintf.c:1642)
==3151==    by 0x4EA0F25: printf (printf.c:33)
==3151==    by 0x108729: main (exec5.c:9)
==3151==  Uninitialised value was created by a heap allocation
==3151==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3151==    by 0x1086EB: main (exec5.c:6)
==3151== 
==3151== Conditional jump or move depends on uninitialised value(s)
==3151==    at 0x4E98B4C: vfprintf (vfprintf.c:1642)
==3151==    by 0x4EA0F25: printf (printf.c:33)
==3151==    by 0x108729: main (exec5.c:9)
==3151==  Uninitialised value was created by a heap allocation
==3151==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3151==    by 0x1086EB: main (exec5.c:6)
==3151== 
0
==3151== 
==3151== HEAP SUMMARY:
==3151==     in use at exit: 0 bytes in 0 blocks
==3151==   total heap usage: 2 allocs, 2 frees, 1,424 bytes allocated
==3151== 
==3151== All heap blocks were freed -- no leaks are possible
==3151== 
==3151== For counts of detected and suppressed errors, rerun with: -v
==3151== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 0 from 0)


./exec5 -v
0






6)
./exec6
exec6: malloc.c:2401: sysmalloc: Assertion `(old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)' failed.
Aborted (core dumped)




gdb exec6
GNU gdb (Ubuntu 8.1-0ubuntu3) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from exec6...done.
(gdb) run
Starting program: /media/sf_VM/BSYS/14_AdressAPI/exec6 
exec6: malloc.c:2401: sysmalloc: Assertion `(old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)' failed.

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51
51	../sysdeps/unix/sysv/linux/raise.c: No such file or directory.





valgrind --leak-check=yes ./exec6
==3191== Memcheck, a memory error detector
==3191== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3191== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3191== Command: ./exec6
==3191== 
==3191== Invalid write of size 4
==3191==    at 0x10870B: main (exec6.c:10)
==3191==  Address 0x522d068 is 0 bytes after a block of size 40 alloc'd
==3191==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3191==    by 0x1086EB: main (exec6.c:8)
==3191== 
==3191== Invalid read of size 4
==3191==    at 0x108721: main (exec6.c:12)
==3191==  Address 0x522d040 is 0 bytes inside a block of size 40 free'd
==3191==    at 0x4C30D3B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3191==    by 0x10871C: main (exec6.c:11)
==3191==  Block was alloc'd at
==3191==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3191==    by 0x1086EB: main (exec6.c:8)
==3191== 
0
==3191== 
==3191== HEAP SUMMARY:
==3191==     in use at exit: 0 bytes in 0 blocks
==3191==   total heap usage: 2 allocs, 2 frees, 1,064 bytes allocated
==3191== 
==3191== All heap blocks were freed -- no leaks are possible
==3191== 
==3191== For counts of detected and suppressed errors, rerun with: -v
==3191== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)



./exec5 -v
0








7)

./exec7
free(): invalid pointer
Aborted (core dumped)





valgrind --leak-check=yes ./exec7
==3209== Memcheck, a memory error detector
==3209== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3209== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3209== Command: ./exec7
==3209== 
==3209== Invalid write of size 4
==3209==    at 0x1086BB: main (exec7.c:9)
==3209==  Address 0x522d1d0 is 0 bytes after a block of size 400 alloc'd
==3209==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3209==    by 0x10869B: main (exec7.c:7)
==3209== 
==3209== Invalid free() / delete / delete[] / realloc()
==3209==    at 0x4C30D3B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3209==    by 0x1086D2: main (exec7.c:11)
==3209==  Address 0x522d108 is 200 bytes inside a block of size 400 alloc'd
==3209==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3209==    by 0x10869B: main (exec7.c:7)
==3209== 
==3209== 
==3209== HEAP SUMMARY:
==3209==     in use at exit: 400 bytes in 1 blocks
==3209==   total heap usage: 1 allocs, 1 frees, 400 bytes allocated
==3209== 
==3209== 400 bytes in 1 blocks are definitely lost in loss record 1 of 1
==3209==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3209==    by 0x10869B: main (exec7.c:7)
==3209== 
==3209== LEAK SUMMARY:
==3209==    definitely lost: 400 bytes in 1 blocks
==3209==    indirectly lost: 0 bytes in 0 blocks
==3209==      possibly lost: 0 bytes in 0 blocks
==3209==    still reachable: 0 bytes in 0 blocks
==3209==         suppressed: 0 bytes in 0 blocks
==3209== 
==3209== For counts of detected and suppressed errors, rerun with: -v
==3209== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)


./exec7 -v
free(): invalid pointer
Aborted (core dumped)



gdb exec7
GNU gdb (Ubuntu 8.1-0ubuntu3) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from exec7...done.
(gdb) run
Starting program: /media/sf_VM/BSYS/14_AdressAPI/exec7 
free(): invalid pointer

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51
51	../sysdeps/unix/sysv/linux/raise.c: No such file or directory.

